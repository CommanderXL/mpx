<template>
  <view>
    <view class="wrapper">
      <view>this is ref view</view>
    </view>

    <view class="wrapper">
      <ref-a>
        <view>this is ref-a slot content</view>
      </ref-a>
    </view>

    <view class="wrapper">
      <ref-a>
        <ref-b wx:ref="refB" bindtapRefb="tapRefBComponent">
          <view wx:ref="refView" slot="before" bindtap="tapRefBView">this is ref-b slot content</view>
        </ref-b>
        <ref-c wx:ref="refC" bindrefctap="tapRefC" slot="after">
          <view slot="before">this is ref-c slot content</view>
        </ref-c>
      </ref-a>
    </view>
  </view>
</template>

<script>
import { createComponent } from '@mpxjs/core'

createComponent({
  data: {
    ref: '111'
  },
  attached() {
    setTimeout(() => {
      // console.log('the ref is:', this.$refs)
      // console.log('the refView1 is:', this.$refs.refView1)
      // console.log('the refA is:', this.$refs.refA.sayHello())
      console.log('the refB is:', this.$refs.refB.helloRefB())
      console.log('the refView is:', this.$refs.refView)
      console.log('the refC is:', this.$refs.refC.helloRefC())
    }, 100)
  },
  methods: {
    tapRefBComponent (e) {
      console.log('on tapRefBComponent method in ref page', e.detail)
    },
    tapRefBView () {
      console.log('tapRefB', this.ref)
    },
    tapRefC () {
      console.log('tapRefC in ref page')
    }
  }
})
</script>

<style lang="stylus">
.wrapper
  margin 10px
  padding 10px
  border 1px solid #ccc
</style>

<script type="application/json">
{
  // "runtimeCompile": true,
  "usingComponents": {
    "ref-a": "./components/ref-a.mpx",
    "ref-b": "./components/ref-b.mpx",
    "ref-c": "./components/ref-c.mpx"
  }
}
</script>
